import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(25.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.purple500,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(34.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.primary,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        headlineMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 27.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF707070),
    primaryContainer: Color(0XFF361818),
    secondary: Color(0XFF361818),
    secondaryContainer: Color(0XFF2F82B9),
    tertiary: Color(0XFF361818),
    tertiaryContainer: Color(0XFF2F82B9),

    // Background colors
    background: Color(0XFF361818),

    // Surface colors
    surface: Color(0XFF361818),
    surfaceTint: Color(0X874B0619),
    surfaceVariant: Color(0XFF2F82B9),

    // Error colors
    error: Color(0X874B0619),
    errorContainer: Color(0XFF446650),
    onError: Color(0X90968BCF),
    onErrorContainer: Color(0XFF0A0503),

    // On colors(text colors)
    onBackground: Color(0XFFBCB1B1),
    onInverseSurface: Color(0X90968BCF),
    onPrimary: Color(0X874B0619),
    onPrimaryContainer: Color(0XFFBCB1B1),
    onSecondary: Color(0XFFBCB1B1),
    onSecondaryContainer: Color(0X874B0619),
    onTertiary: Color(0XFFBCB1B1),
    onTertiaryContainer: Color(0X874B0619),

    // Other colors
    outline: Color(0X874B0619),
    outlineVariant: Color(0XFF361818),
    scrim: Color(0XFF361818),
    shadow: Color(0X874B0619),

    // Inverse colors
    inversePrimary: Color(0XFF361818),
    inverseSurface: Color(0X874B0619),

    // Pending colors
    onSurface: Color(0XFFBCB1B1),
    onSurfaceVariant: Color(0X874B0619),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500A3 => Color(0XA3DEC90B);

  // Black
  Color get black900 => Color(0XFF07031A);
  Color get black90001 => Color(0XFF000000);
  Color get black90084 => Color(0X84130202);

  // BlueGray
  Color get blueGray100 => Color(0XFFCCE5E5);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFE8F4F5);
  Color get blueGray60083 => Color(0X833E7580);
  Color get blueGray700 => Color(0XFF465268);

  // Cyan
  Color get cyan300 => Color(0XFF42E1C6);
  Color get cyan900 => Color(0XFF134465);

  // DeepOrange
  Color get deepOrangeA700 => Color(0XFFE51717);
  Color get deepOrangeA70019 => Color(0X19E71B1B);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFEAE8F1);
  Color get deepPurple800 => Color(0XFF3B25A4);
  Color get deepPurple80029 => Color(0X292514C8);
  Color get deepPurpleA70029 => Color(0X297912DF);

  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray10001 => Color(0XFFFBF5F5);
  Color get gray10002 => Color(0XFFEEF5F6);
  Color get gray200 => Color(0XFFEFF1EB);
  Color get gray400 => Color(0XFFC2A4A4);
  Color get gray50 => Color(0XFFFFF9F9);
  Color get gray600 => Color(0XFF808080);
  Color get gray60001 => Color(0XFF7C7A7B);
  Color get gray60002 => Color(0XFF736868);
  Color get gray700 => Color(0XFF6F5F5F);
  Color get gray900 => Color(0XFF410B0B);
  Color get gray90001 => Color(0XFF481515);
  Color get gray90002 => Color(0XFF590E2A);

  // Green
  Color get greenA100 => Color(0XFFA3F1BF);
  Color get greenA200 => Color(0XFF60EBC5);
  Color get greenA20001 => Color(0XFF73EE9F);
  Color get greenA700 => Color(0XFF18E82D);

  // Indigo
  Color get indigo200 => Color(0XFF8CBAD9);
  Color get indigo50 => Color(0XFFE9E8EF);
  Color get indigo60029 => Color(0X29312CC6);
  Color get indigoA70029 => Color(0X29192EE8);

  // LightBlueEa
  Color get lightBlue400Ea => Color(0XEA32B2E2);

  // LightGreen
  Color get lightGreen300 => Color(0XFFC5CE84);

  // LimeEa
  Color get lime800Ea => Color(0XEAAE9F1B);

  // Lime
  Color get lime900 => Color(0XFF664409);
  Color get lime90001 => Color(0XFF5F5602);

  // OrangeF
  Color get orange600F7 => Color(0XF7EE8B0B);

  // Pink
  Color get pink300 => Color(0XFFDB5687);
  Color get pink500 => Color(0XFFEC1890);
  Color get pink50001 => Color(0XFFE92252);
  Color get pink50002 => Color(0XFFDE1A89);
  Color get pink700 => Color(0XFFC82368);
  Color get pink800 => Color(0XFF972A52);
  Color get pink900 => Color(0XFF671414);
  Color get pink90001 => Color(0XFF6E1435);
  Color get pink90002 => Color(0XFF711818);

  // Purple
  Color get purple100 => Color(0XFFE1C7DC);
  Color get purple10001 => Color(0XFFE0CAE6);
  Color get purple10002 => Color(0XFFDEC8D5);
  Color get purple400 => Color(0XFFD821B3);
  Color get purple40001 => Color(0XFFCF2FA4);
  Color get purple50 => Color(0XFFF5DFF0);
  Color get purple500 => Color(0XFFB60EA5);
  Color get purple900 => Color(0XFF63266E);

  // PurpleF
  Color get purple300F7 => Color(0XF7AD52D9);

  // PurpleACf
  Color get purpleA100Cf => Color(0XCFF564D9);

  // Red
  Color get red200 => Color(0XFFE9AEAE);
  Color get red600 => Color(0XFFE53939);
  Color get red60001 => Color(0XFFE24242);
  Color get red900 => Color(0XFF7B0606);
  Color get red90001 => Color(0XFFAA1A1A);
  Color get redA100 => Color(0XFFF18181);
  Color get redA700 => Color(0XFFEC0909);
  Color get redA70000 => Color(0X00B90707);
  Color get redA70001 => Color(0XFFCC0A0A);

  // Teal
  Color get teal100 => Color(0XFFABCED5);
  Color get teal10001 => Color(0XFFB8E8E3);
  Color get teal50 => Color(0XFFE0F3F3);
  Color get teal5001 => Color(0XFFE3F0F2);
  Color get teal5002 => Color(0XFFD0F0F2);
  Color get teal5003 => Color(0XFFE0EAF2);
  Color get teal5004 => Color(0XFFD7EBEE);
  Color get tealA400 => Color(0XFF23FCD5);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // YellowF
  Color get yellow800F7 => Color(0XF7F2942A);
  Color get yellow900F7 => Color(0XF7F47119);

  get colorDB5687 => null;

  get color6E1435 => null;

  get color590E2A => null;
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
